services:
  localstack:
    container_name: localstack
    image: localstack/localstack
    hostname: localstack
    ports:
      - "127.0.0.1:4566:4566"
    environment:
      - SKIP_SSL_CERT_DOWNLOAD=1
      - SERVICES=sqs,dynamodb
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - ls-network

  dynamodb-init:
    container_name: setup-dynamodb
    image: amazon/aws-cli
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    entrypoint: [ "sh", "-c" ]
    command: >
      "aws dynamodb create-table --table-name tb_proposta_tombamento
      --attribute-definitions AttributeName=status,AttributeType=S AttributeName=dt_liquidacao,AttributeType=S
      --key-schema AttributeName=status,KeyType=HASH AttributeName=dt_liquidacao,KeyType=RANGE
      --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
      --endpoint-url=http://localstack:4566 --region us-east-1 &&
      echo 'Tabela criada com sucesso: tb_proposta_tombamento'"
    networks:
      - ls-network

  sqs-init:
    container_name: setup-sqs
    image: amazon/aws-cli
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    entrypoint: [ "sh", "-c" ]
    command: >
      "aws sqs create-queue --queue-name limited-queue --endpoint-url=http://localstack:4566 --region us-east-1 &&
       echo 'Fila criada com sucesso: limited-queue'"
    networks:
      - ls-network

networks:
  ls-network:
    driver: bridge